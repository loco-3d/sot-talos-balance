<?xml version='1.0' encoding='UTF-8'?>
<root version="2.3.0">
 <tabbed_widget name="Main Window" parent="main_window">
  <plotmatrix rows="2" columns="3" tab_name="plot">
   <plot col="0" row="0">
    <range bottom="-0.003286" left="2.648000" right="7.651000" top="0.001841"/>
    <limitY/>
    <curve name="/sot/cdc_estimator/c/data.0" G="100" B="160" custom_transform="noTransform" R="20"/>
    <curve name="/sot/dummy_wp/comDes/data.0" G="0" B="247" custom_transform="noTransform" R="247"/>
    <curve name="/sot/robot_dynamic/com/data.0" G="180" B="127" custom_transform="noTransform" R="80"/>
    <transform value="noTransform"/>
   </plot>
   <plot col="0" row="1">
    <range bottom="-0.000039" left="2.648000" right="7.640000" top="0.000026"/>
    <limitY/>
    <curve name="/sot/cdc_estimator/dc/data.0" G="100" B="160" custom_transform="noTransform" R="20"/>
    <transform value="noTransform"/>
   </plot>
   <plot col="1" row="0">
    <range bottom="-0.027569" left="2.648000" right="7.651000" top="0.026282"/>
    <limitY/>
    <curve name="/sot/cdc_estimator/c/data.1" G="116" B="13" custom_transform="noTransform" R="5"/>
    <curve name="/sot/dummy_wp/comDes/data.1" G="51" B="238" custom_transform="noTransform" R="0"/>
    <curve name="/sot/robot_dynamic/com/data.1" G="83" B="29" custom_transform="noTransform" R="244"/>
    <transform value="noTransform"/>
   </plot>
   <plot col="1" row="1">
    <range bottom="-0.039159" left="2.648000" right="7.640000" top="0.039146"/>
    <limitY/>
    <curve name="/sot/cdc_estimator/dc/data.1" G="116" B="13" custom_transform="noTransform" R="5"/>
    <transform value="noTransform"/>
   </plot>
   <plot col="2" row="0">
    <range bottom="0.874383" left="2.648000" right="7.651000" top="0.875654"/>
    <limitY/>
    <curve name="/sot/cdc_estimator/c/data.2" G="19" B="24" custom_transform="noTransform" R="255"/>
    <curve name="/sot/dummy_wp/comDes/data.2" G="119" B="119" custom_transform="noTransform" R="0"/>
    <curve name="/sot/robot_dynamic/com/data.2" G="52" B="136" custom_transform="noTransform" R="142"/>
    <transform value="noTransform"/>
   </plot>
   <plot col="2" row="1">
    <range bottom="-0.000078" left="2.648000" right="7.640000" top="0.000123"/>
    <limitY/>
    <curve name="/sot/cdc_estimator/dc/data.2" G="19" B="24" custom_transform="noTransform" R="255"/>
    <transform value="noTransform"/>
   </plot>
  </plotmatrix>
  <currentPlotMatrix index="0"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad_CSV">
   <default time_axis=""/>
  </plugin>
  <plugin ID="DataLoad_ROS_bags">
   <use_header_stamp value="false"/>
   <use_renaming_rules value="true"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
  </plugin>
  <plugin ID="DataLoad_ULog"/>
  <plugin ID="ROS_Topic_Streamer">
   <use_header_stamp value="false"/>
   <use_renaming_rules value="true"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
  </plugin>
  <plugin ID="RosoutPublisherROS" status="idle"/>
  <plugin ID="TopicPublisherROS" status="idle"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <previouslyLoaded_Streamer name="ROS_Topic_Streamer"/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets>
  <snippet name="1st_derivative">
   <global>var prevX = 0
var prevY = 0</global>
   <equation>dx = time - prevX
dy = value - prevY
prevX = time
prevY = value

return dy/dx</equation>
  </snippet>
  <snippet name="1st_order_lowpass">
   <global>var prevY = 0
var alpha = 0.1</global>
   <equation>prevY = alpha * value + (1.-alpha) * prevY

return prevY</equation>
  </snippet>
  <snippet name="sum_A_B">
   <global></global>
   <equation>return $$PLOT_A$$ + $$PLOT_B$$</equation>
  </snippet>
  <snippet name="yaw_from_quaternion">
   <global>// source: https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles

function quaternionToYaw(x, y, z, w)
{
  // yaw (z-axis rotation)
  t1 = 2.0 * (w * z + x * y);
  t2 = 1.0 - 2.0 * (y * y + z * z);
  yaw = Math.atan2(t1, t2);

  return yaw
}</global>
   <equation>return quaternionToYaw(x, y, z, w);</equation>
  </snippet>
 </snippets>
 <!-- - - - - - - - - - - - - - - -->
</root>
